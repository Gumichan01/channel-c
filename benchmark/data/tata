
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main_aux(int argc, char **argv);
void please(char *argv);

int main(int argc, char **argv)
{
    return main_aux(argc, argv);
}


/// Fonction auxilliare
int main_aux(int argc, char **argv)
{
    pid_t pid;
    pid = fork();
    int status;

    if(pid == 0)
    {
        please(argv[1]);
        exit(EXIT_FAILURE);
    }
    else if(pid == -1)
    {
        perror("fork failed ");
    }
    else
    {
        wait(&status);

        if(WIFEXITED(status) && WEXITSTATUS(status) == 0)
        {
            printf("terminaison normale\n");
            please(argv[2]);
            return EXIT_FAILURE;
        }
        else
        {
            please(argv[3]);
            return EXIT_FAILURE;
        }

        return EXIT_SUCCESS;
    }

    return EXIT_FAILURE;
}


/// DÃ©finition de la fonction commune aux questions 4 et 5
// Execute la commande "ls -l"
void please(char *argv)
{
    char *ag[] = {argv, NULL};
    execvp(argv,ag);
    perror("execv failed ");
}


--
